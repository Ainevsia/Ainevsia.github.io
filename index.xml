<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Ainevsia Blog</title>
    <link>https://ainevsia.github.io/</link>
    <description>Recent content on Ainevsia Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 Feb 2021 10:52:18 +0800</lastBuildDate><atom:link href="https://ainevsia.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ethernaut 通关笔记</title>
      <link>https://ainevsia.github.io/post/ethernaut/</link>
      <pubDate>Sun, 21 Feb 2021 10:52:18 +0800</pubDate>
      
      <guid>https://ainevsia.github.io/post/ethernaut/</guid>
      <description>Ethernaut复活了，赶紧开始做题
Level 0. Hello Ethernaut 使用的是浏览器里的js对象的方式来进行的，之前还没有尝试过
Level 1. Fallback 需要知道怎么在console里调用函数的时候附加上交易的value值，以及如何调用fallback函数。不用web3py的操作一开始还真不太会。
Level 2. Fallout 一款对程序猿友好的字体是多么重要。
一开始在网页里看我是根本没看出来还有这回事，还加了个迷惑性极强的注释，导致我看了一圈发现没有改owner的操作啊。
复制到编辑器里就稍微明显一点了，不然我是真看不出区别。
Level 3. Coin Flip pragma solidity ^0.6.0; contract CoinFlip { uint256 public consecutiveWins; uint256 lastHash; uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968; constructor() public { consecutiveWins = 0; } function flip(bool _guess) public returns (bool) { uint256 blockValue = uint256(blockhash(block.number - (1))); if (lastHash == blockValue) { revert(); } lastHash = blockValue; uint256 coinFlip = blockValue / (FACTOR); bool side = coinFlip == 1 ?</description>
    </item>
    
    <item>
      <title>A Guided Walk Through of OpenVPN</title>
      <link>https://ainevsia.github.io/post/openvpn/</link>
      <pubDate>Tue, 27 Aug 2019 16:02:05 +0800</pubDate>
      
      <guid>https://ainevsia.github.io/post/openvpn/</guid>
      <description>A Guided Walk Through of OpenVPN
Before We Start If the idea of accessing the devices under a protected private subnet has ever appeared in your mind, then OpenVPN maybe one of your choices. OpenVPN is a cross-platform software that allows you to build robust, flexible, and secure virtual private networking(VPN). Despite these renowned properties, building and configuring such a software is never an easy shoot, especially when you do it for the first time.</description>
    </item>
    
    <item>
      <title>2006混淆C语言大赛-sykes2源码解析</title>
      <link>https://ainevsia.github.io/post/first-post/</link>
      <pubDate>Fri, 19 Apr 2019 13:56:13 +0800</pubDate>
      
      <guid>https://ainevsia.github.io/post/first-post/</guid>
      <description>上周六在准备华为网络技术考试的闲暇之余发现了一段超级有趣的代码，出自国际C语言混乱代码大赛。或许你像我一样第一次听说这个比赛，那就摘一段维基百科的介绍：
国际C语言混乱代码大赛（IOCCC, The International Obfuscated C Code Contest）是一项国际程序设计赛事。从1984年开始，本赛事每年举办一次。本赛事的目的是写出最有创意和最让人难以理解的C语言代码。
先看一眼这段小巧玲珑的代码 main(_){_^448&amp;amp;&amp;amp;main(-~_);putchar(--_%64?32|-~7[__TIME__-_/8%8][&amp;#34;&amp;gt;&amp;#39;txiZ^(~z?&amp;#34;-48]&amp;gt;&amp;gt;&amp;#34;;;;====~$::199&amp;#34;[_*2&amp;amp;8|_/64]/(_&amp;amp;2?1:8)%8&amp;amp;1:10);} 运行这段代码看看干了啥 $ gcc ioccc.c -o a.out $ ./a.out !! !! !! !!!!!! !!!!!! !!!! !! !! !! !! !! !! !! !! !! !! !! !! !! !! !! !! !! !!!!!! !! !! !! !! !! !!!! !!!! !! !! !! !! !! !! !! !! !! !! !! !! !! !! !! !! !! !! !! !!!!!! !!!!!! !</description>
    </item>
    
  </channel>
</rss>
